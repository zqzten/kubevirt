#!/bin/sh
alias docker="sudo /usr/bin/docker"
alias log='echo "[$(date)] "'

ARGS="$@"

if [ -z "$QEMU" ]; then
    QEMU="/usr/bin/qemu-system-x86_64"
fi
if [ -z "$LOG" ]; then
    LOG="/var/log/kubevirt/qemu-kube.log"
fi
if [ ! -w "$LOG" ]; then
    LOG="/dev/null"
fi

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -name)
        VM_NAMESPACE_NAME="$2"
        shift
    ;;
    *)
    ;;
esac
shift
done

if [ -z "$VM_NAMESPACE_NAME" ]; then
    log "Libvirt is asking for qemu capabilities." >> $LOG
    exec $QEMU $ARGS
fi

log "Trying to start VM ${VM_NAMESPACE_NAME}." >> $LOG

CMD="$QEMU $ARGS"

log "cgroup path: $SLICE" >> $LOG
log "cgroups: $CONTROLLERS" >> $LOG
log "PID namespace: $PIDNS" >> $LOG
log "PIDFILE: $PIDFILE" >> $LOG

log "$CMD" >> $LOG

set -e

# Start qemu in the pid namespace of the container to receive signals on
# container kills Don't close file descriptors smaller than 10000 to allow
# passing tap device fds Start the qemu process in the cgroups of the docker
# container to adhere to the resource limitations of the container.
exec sudo -C 10000 bash -s << END

  function _term() {
    pkill -P \$! --signal SIG\$1
  }

  trap "_term TERM" TERM
  trap "_term INT" INT
  trap "_term HUP" HUP
  trap "_term QUIT" QUIT
  trap "_term TERM" EXIT
  trap "_term TERM" ERR

  cgclassify -g ${CONTROLLERS}:$SLICE --sticky \$\$
  $CMD &
  pid=\$!
  echo "\$pid" > $PIDFILE
  echo "LAUNCHED PID \$pid" >> $LOG
  wait
END

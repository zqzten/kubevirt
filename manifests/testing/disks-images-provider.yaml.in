---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: disk-alpine
  labels:
    kubevirt.io: ""
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

  selector:
    matchLabels:
      os: "alpine"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: host-path-disk-alpine
  labels:
    kubevirt.io: ""
    os: "alpine"
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/hostImages/alpine
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: disk-custom
  labels:
    kubevirt.io: ""
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

  selector:
    matchLabels:
      os: "custom"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: host-path-disk-custom
  labels:
    kubevirt.io: ""
    os: "custom"
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/hostImages/custom
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: disks-images-provider
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: "disks-images-provider"
spec:
  template:
    metadata:
      labels:
        name: disks-images-provider
        kubevirt.io: disks-images-provider
      name: disks-images-provider
    spec:
      serviceAccountName: kubevirt-testing
      containers:
        - name: target
          image: {{.DockerPrefix}}/disks-images-provider:{{.DockerTag}}
          volumeMounts:
          - name: images
            mountPath: /hostImages
          securityContext:
            privileged: true
          readinessProbe:	
            exec:	
              command:	
              - cat	
              - /ready
            initialDelaySeconds: 10	
            periodSeconds: 5
      volumes:
        - name: images
          hostPath:
            path: /tmp/hostImages
            type: DirectoryOrCreate

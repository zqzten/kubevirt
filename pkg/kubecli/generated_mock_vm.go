// Automatically generated by MockGen. DO NOT EDIT!
// Source: vm.go

package kubecli

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	v10 "kubevirt.io/kubevirt/pkg/api/v1"
)

// Mock of KubevirtClient interface
type MockKubevirtClient struct {
	ctrl     *gomock.Controller
	recorder *_MockKubevirtClientRecorder
}

// Recorder for MockKubevirtClient (not exported)
type _MockKubevirtClientRecorder struct {
	mock *MockKubevirtClient
}

func NewMockKubevirtClient(ctrl *gomock.Controller) *MockKubevirtClient {
	mock := &MockKubevirtClient{ctrl: ctrl}
	mock.recorder = &_MockKubevirtClientRecorder{mock}
	return mock
}

func (_m *MockKubevirtClient) EXPECT() *_MockKubevirtClientRecorder {
	return _m.recorder
}

func (_m *MockKubevirtClient) VM(namespace string) VMInterface {
	ret := _m.ctrl.Call(_m, "VM", namespace)
	ret0, _ := ret[0].(VMInterface)
	return ret0
}

func (_mr *_MockKubevirtClientRecorder) VM(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "VM", arg0)
}

func (_m *MockKubevirtClient) Migration(namespace string) MigrationInterface {
	ret := _m.ctrl.Call(_m, "Migration", namespace)
	ret0, _ := ret[0].(MigrationInterface)
	return ret0
}

func (_mr *_MockKubevirtClientRecorder) Migration(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Migration", arg0)
}

// Mock of VMInterface interface
type MockVMInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockVMInterfaceRecorder
}

// Recorder for MockVMInterface (not exported)
type _MockVMInterfaceRecorder struct {
	mock *MockVMInterface
}

func NewMockVMInterface(ctrl *gomock.Controller) *MockVMInterface {
	mock := &MockVMInterface{ctrl: ctrl}
	mock.recorder = &_MockVMInterfaceRecorder{mock}
	return mock
}

func (_m *MockVMInterface) EXPECT() *_MockVMInterfaceRecorder {
	return _m.recorder
}

func (_m *MockVMInterface) Get(name string, options v1.GetOptions) (*v10.VM, error) {
	ret := _m.ctrl.Call(_m, "Get", name, options)
	ret0, _ := ret[0].(*v10.VM)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockVMInterfaceRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0, arg1)
}

func (_m *MockVMInterface) List(opts v1.ListOptions) (*v10.VMList, error) {
	ret := _m.ctrl.Call(_m, "List", opts)
	ret0, _ := ret[0].(*v10.VMList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockVMInterfaceRecorder) List(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List", arg0)
}

func (_m *MockVMInterface) Create(_param0 *v10.VM) (*v10.VM, error) {
	ret := _m.ctrl.Call(_m, "Create", _param0)
	ret0, _ := ret[0].(*v10.VM)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockVMInterfaceRecorder) Create(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Create", arg0)
}

func (_m *MockVMInterface) Update(_param0 *v10.VM) (*v10.VM, error) {
	ret := _m.ctrl.Call(_m, "Update", _param0)
	ret0, _ := ret[0].(*v10.VM)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockVMInterfaceRecorder) Update(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update", arg0)
}

func (_m *MockVMInterface) Delete(name string, options *v1.DeleteOptions) error {
	ret := _m.ctrl.Call(_m, "Delete", name, options)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockVMInterfaceRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0, arg1)
}

#!/bin/sh

ARGS="$@"

# static config
if [ -r "/etc/vdsm/qemu_kube.conf" ]; then
    source "/etc/vdsm/qemu_kube.conf"
fi
# runtime config
# TODO: let Makefile fill this
# source "/var/run/vdsm/qemu_kube.conf"

if [ -z "$QEMU_KUBE_USE_NSENTER" ]; then
    QEMU_KUBE_USE_DOCKER="true"
fi
if [ -z "$QEMU" ]; then
    QEMU="/usr/bin/qemu-system-x86_64"
fi
if [ -z "$LOG" ]; then
    LOG="/var/log/vdsm/qemu-kube.log"
fi
if [ ! -w "$LOG" ]; then
    LOG="/dev/null"
fi


while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -name)
        VM_NAME="$2"
        shift
    ;;
    *)
    ;;
esac
shift
done

if [ -z "$VM_NAME" ]; then
    exec $QEMU $ARGS
fi


CONTAINER_ID=$( docker ps | awk "/.*compute.*virt-launcher-$VM_NAME.*/ { print \$1 }" )
# We can also get the pid from docker itself:
QEMU_UID=$(id -u qemu)
QEMU_GID=$(id -g qemu)

if [ x"$QEMU_KUBE_USE_DOCKER" == x"true" ]; then
    CMD="/bin/docker exec $CONTAINER_ID $QEMU $ARGS"
else
    # TODO: let Makefile fill UID and GID
    CONTAINER_PID=docker inspect --format '{{.State.Pid}}' $CONTAINER_ID
    CMD="/bin/sudo -C 1000 /bin/nsenter -t $CONTAINER_PID -u -p -G $QEMU_GID -S $QEMU_UID $QEMU $ARGS"
fi

date >> $LOG
echo "QEMU_KUBE_USE_DOCKER=$QEMU_KUBE_USE_DOCKER" >> $LOG
echo "$CMD" >> $LOG

if [ -n "$QEMU_KUBE_DRY_RUN" ]; then
        exit 0
fi

if [ x"$QEMU_KUBE_USE_DOCKER" == x"true" ]; then
    exec $CMD
else
    # TODO: let Makefile fill UID and GID
    export LC_ALL=C
    export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin"
    export QEMU_AUDIO_DRV=none
    exec $CMD
fi

